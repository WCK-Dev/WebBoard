<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="BoardDAO">
	
	<!-- ******************************** ADMIN 영역 ******************************** -->
	<!-- 글 목록 보기 -->
	<!-- 생략가능한 parameterType을 준 이유 : xml파일만 보고 어떤 클래스인지 명시. -->
	<select id="selectAllBoard" resultType="BoardVO">
		SELECT * FROM board 
		WHERE b_category != 3
		<if test="condition != null">
			AND ${condition} like '%${keyword}%'
		</if>
		
		ORDER BY ${sort} DESC
		
		LIMIT #{pageStart}, #{pageSize}
	</select>
	
	<select id="selectNoticeList" resultType="BoardVO">
		SELECT * FROM board
		WHERE b_category = 3
		ORDER BY b_regdate DESC		
	</select>
	
	<delete id="deleteBoardList" parameterType="java.util.List">
		DELETE FROM board
		WHERE b_num IN
		<!-- collection은 데이터 타입 -->
		<foreach collection="list" item="b_num" open="(" separator="," close=")"> 
			#{b_num}
		</foreach>
	</delete>
	
	<!-- ******************************** USER 영역 ******************************** -->
	<select id="userSelectNoticeList" resultType="BoardVO">
		SELECT * FROM board
		WHERE b_category = 3
		ORDER BY b_regdate DESC
		LIMIT 0, 3
	</select>
	
	<insert id="insertBoard" parameterType="BoardVO" useGeneratedKeys="true" keyProperty="b_num">
		INSERT INTO board (b_category, b_writer, b_email, b_title, b_content)
		VALUES(#{b_category}, #{b_writer}, #{b_email}, #{b_title}, #{b_content})
	</insert>
	
	<!-- 글상세보기 -->
	<select id="selectBoard" parameterType="BoardVO" resultType="BoardVO">
		SELECT *
		FROM board
		WHERE b_num = #{b_num}
	</select>
	
	<update id="updateBoard" parameterType="BoardVO">
		UPDATE board
		SET b_category=#{b_category}, b_title=#{b_title}, b_content=#{b_content}
		WHERE b_num = #{b_num}
	</update>
	
	<delete id="deleteBoard" parameterType="BoardVO">
		DELETE FROM board
		WHERE b_num = #{b_num}
	</delete>

	<!-- 글 전체 개수 구하기 -->
	<select id="selectTotalCount" resultType="int">
		SELECT count(*)	FROM board
		WHERE b_category != 3
		<if test="condition != null">
			AND ${condition} like '%${keyword}%'
		</if>
	</select>
	
<!--────────────────────────────────────────────────────────────────────────────────────────────────────────────────────-->
	
	<update id="updateReadCount" parameterType="BoardVO">
		UPDATE board
		SET b_readcount=b_readcount+1
		WHERE b_num=#{b_num}
	</update>
	
	<update id="upReplyCount" parameterType="ReplyVO">
		UPDATE board
		SET b_replycount = b_replycount+1
		WHERE b_num = #{b_num}
	</update>

	<update id="downReplyCount" parameterType="ReplyVO">
		UPDATE board
		SET b_replycount = b_replycount-1
		WHERE b_num = (SELECT b_num FROM reply WHERE r_num = #{r_num})
	</update>

<!--────────────────────────────────────────────────────────────────────────────────────────────────────────────────────-->	
	
	<select id="selectLike_log" parameterType="HashMap" resultType="int">
		SELECT count(*) FROM like_log
		WHERE u_id=#{user} AND b_num=#{board}
	</select>

	<insert id="insertLike_log" parameterType="HashMap">
		INSERT like_log
		VALUES (#{user}, #{board})
	</insert>

<!--────────────────────────────────────────────────────────────────────────────────────────────────────────────────────-->

	<update id="updateLike" parameterType="BoardVO">
		UPDATE board
		SET b_like=b_like+1
		WHERE b_num = #{b_num}
		
		<selectKey keyProperty="b_like" resultType="int" order="AFTER">
	    	SELECT b_like FROM board WHERE b_num=#{b_num}
	  	</selectKey>
	</update>

	<update id="updateHate" parameterType="BoardVO">
		UPDATE board
		SET b_hate=b_hate+1
		WHERE b_num = #{b_num}
		
		<selectKey keyProperty="b_hate" resultType="int" order="AFTER">
    		SELECT b_hate FROM board WHERE b_num=#{b_num}
  		</selectKey>
	</update>

</mapper>
